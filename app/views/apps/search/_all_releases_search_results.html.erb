<% if releases.present? %>
  <div class="text-secondary text-sm">
    <strong><%= pagy.count %></strong> <%= "release".pluralize(pagy.count) %> found.
  </div>
<% else %>
  <div class="text-secondary-50 text-xs">
    Search by commit messages or pull requests.
  </div>
<% end %>

<% if releases.present? %>
  <% releases.each do |release| %>
    <%= render SectionComponent.new(style: :boxed, size: :micro) do %>
      <% release = ReleasePresenter.new(release, self) %>
      <div class="flex flex-col gap-y-2">
        <div class="flex items-center justify-between border-default-b px-1 py-1 mb-3">
          <div class="flex justify-start item-gap-default">
            <h2 class="heading-2 text-main dark:text-white font-normal">Release <%= release.display_release_version %></h2>
            <div class="flex items-center gap-1">
              <%= render BadgeComponent.new(**release.release_status) %>
              <%= render BadgeComponent.new(text: "Started on #{release.display_start_time}", kind: :badge) %>
              <% if release.release_branch.present? %>
                <%= render ButtonComponent.new(label: release.release_branch,
                                               scheme: :link,
                                               type: :link_external,
                                               options: release.branch_url,
                                               authz: false,
                                               size: :xxs,
                                               arrow: :none) do |b|
                      b.with_icon(vcs_provider_logo, size: :sm)
                    end %>
              <% end %>
            </div>
          </div>

          <div class="flex justify-end">
            <%= render ButtonComponent.new(
                  scheme: :supporting,
                  label: "Go to release",
                  options: release_path(release),
                  size: :sm,
                  html_options: {class: "-mr-2"},
                  authz: false,
                  type: :link
                ) do |b|
                  b.with_icon("arrow_right.svg")
                end %>
          </div>
        </div>

        <div class="flex flex-col item-gap-default">
          <% if release.commits.present? %>
            <%= render CardComponent.new(title: "Commits", separator: false, size: :xs, fold: true) do |card| %>
              <% card.with_action do %>
                <span class="text-xs text-secondary items-center">Matched <strong><%= release.commits.size %></strong> commits</span>
              <% end %>
              <%= render partial: "shared/divide_collection", locals: {
                    collection: render(CommitComponent.with_collection(
                      release.commits.map do |commit_hash|
                        Queries::Commit.new(commit_hash)
                      end,
                      detailed: false,
                      render_html: true
                    ))
                  } %>
            <% end %>
          <% end %>

          <% if release.pull_requests.present? %>
            <%= render CardComponent.new(title: "Pull Requests", separator: false, size: :xs, fold: true) do |card| %>
              <% card.with_action do %>
                <span class="text-xs text-secondary items-center">Matched <strong><%= release.pull_requests.size %></strong> pull requests</span>
              <% end %>

              <%= render partial: "shared/divide_collection", locals: {
                    collection: render(PullRequestComponent.with_collection(
                      release.pull_requests.map do |pr_hash|
                        Queries::PullRequest.new(pr_hash)
                      end,
                      render_html: true,
                      enable_truncate: false
                    ))
                  } %>
            <% end %>
          <% end %>
        </div>
      </div>
    <% end %>
  <% end %>

  <div class="pt-5">
    <%= render PaginationComponent.new(results: pagy, turbo_frame: "all_releases", info: true) %>
  </div>

<% else %>
  <%= render EmptyStateComponent.new(
        title: "No releases found",
        text: "Try a different search term, or create a new releases to search through.",
        banner_image: "rocket.svg",
        type: :subdued
      ) %>
<% end %>
