<%= render SectionComponent.new(style: :titled,
                                    title: "Teams (#{@teams.size})",
                                    subtitle: "Teams in your organization") do |sc| %>
  <% sc.with_sidenote do %>
    <%= render ModalComponent.new(title: "Add team") do |modal| %>
      <% modal.with_button(label: "Add", scheme: :light, type: :action, size: :xxs, arrow: :none)
              .with_icon("plus.svg", size: :sm) %>
      <% modal.with_body do %>
        <%= render partial: "accounts/teams/form", locals: { team: Accounts::Team.new(organization: current_organization),
                                                             url: accounts_organization_teams_path(current_organization),
                                                             form_method: :post } %>
      <% end %>
    <% end %>
  <% end %>

  <%= render TableComponent.new(columns: ["Name", "Color", ""]) do |table| %>
    <% @teams.each do |team| %>
      <% table.with_row do |row| %>
        <% row.with_cell do %>
          <%= team.name %>
        <% end %>
        <% row.with_cell do %>
          <div class="flex items-center justify-start">
            <%= content_tag :style, nonce: content_security_policy_nonce do %>
              .team-color-<%= team.id %> {
                background-color: <%= team.color %>;
              }
            <% end %>

            <div class="team-color-<%=team.id %> p-3 rounded-full"></div>
          </div>
        <% end %>
        <% row.with_cell(wrap: true) do %>
          <div class="flex gap-x-2 justify-end">
            <%= render ModalComponent.new(title: "Edit team") do |modal| %>
              <% modal.with_button(scheme: :light,
                                   type: :action,
                                   size: :xxs,
                                   arrow: :none)
                      .with_icon("pencil.svg") %>
              <% modal.with_body do %>
                <%= render partial: "accounts/teams/form", locals: { team:,
                                                                     url: accounts_organization_team_path(current_organization, team),
                                                                     form_method: :put } %>
              <% end %>
            <% end %>
            <%= render ButtonComponent.new(
              scheme: :light,
              options: accounts_organization_team_path(current_organization, team),
              type: :link,
              html_options: { method: :delete, data: { turbo_method: :delete, turbo_confirm: "Are you sure you want to delete the team? This will not remove the users that are part of the team." } }) do |b|
              b.with_icon("trash.svg")
            end %>
          </div>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% end %>

<%= render SectionComponent.new(style: :titled,
                                    title: "Members (#{@users.size})",
                                    subtitle: "Users in your organization") do |sc| %>
  <% sc.with_sidenote do %>
    <%= render ModalComponent.new(title: "Add team member") do |modal| %>
      <% modal.with_button(label: "Add", scheme: :light, type: :action, size: :xxs, arrow: :none)
              .with_icon("plus.svg", size: :sm) %>
      <% modal.with_body do %>
        <%= render partial: "accounts/invitations/form", locals: { invite: Accounts::Invite.new(sender: current_user, organization: current_organization) } %>
      <% end %>
    <% end %>
  <% end %>

  <%= render TableComponent.new(columns: ["Full Name", "Status", "Email", "Preferred Name", "Role", "VCS Username", "Team", "Invited By", ""]) do |table| %>
    <% @users.each do |member| %>
      <% table.with_row do |row| %>
        <% row.with_cell do %>
          <%= member.full_name %>
        <% end %>
        <% row.with_cell do %>
          <%= render BadgeComponent.new(text: "Active", status: :success) %>
        <% end %>
        <% row.with_cell do %>
          <div class="font-medium text-slate-800">
            <%= member.email %>
          </div>
        <% end %>
        <% row.with_cell do %>
          <%= member.preferred_name %>
        <% end %>
        <% row.with_cell do %>
          <%= member.role_for(current_organization).titleize %>
        <% end %>
        <% row.with_cell do %>
          <%= member.github_login || "-" %>
        <% end %>
        <% row.with_cell do %>
          <%= render TeamPillComponent.new(member.team_for(current_organization)) %>
        <% end %>
        <% row.with_cell do %>
          <%= member.successful_invite_for(current_organization)&.sender&.email || "–" %>
        <% end %>
        <% user_role = current_user_role %>
        <% member_role = member.role_for(current_organization) %>
        <% row.with_cell(wrap: true) do %>
          <div class="flex gap-x-2 justify-end">
            <% if can_current_user_edit_role?(member) %>
              <%= render ModalComponent.new(title: "Edit role") do |modal| %>
                <% modal.with_button(scheme: :light,
                                    type: :action,
                                    size: :xxs,
                                    arrow: :none)
                        .with_icon("pencil.svg") %>
                <% modal.with_body do %>
                  <%= render partial: "accounts/invitations/edit_form", locals: { email: member.email, member_role: member_role } %>
                <% end %>
              <% end %>
            <% end %>
            <% if can_current_user_remove_member?(member) %>
              <%= render ButtonComponent.new(
                scheme: :danger,
                type: :button,
                size: :xxs,
                options: accounts_organization_membership_path(current_organization, member.membership_for(current_organization)),
                html_options: { method: :delete, data: { turbo_method: :delete, turbo_confirm: "Are you sure you want to remove #{member.email} from the organization?" } }) do |b|
                b.with_icon("trash.svg")
              end %>
            <% end %>
          </div>
        <% end %>
      <% end %>
    <% end %>
    <% @invited_users.each do |invite| %>
      <% table.with_row do |row| %>
        <% row.with_cell do %>
          -
        <% end %>
        <% row.with_cell do %>
          <%= render BadgeComponent.new(text: "Invited", status: :neutral) %>
        <% end %>
        <% row.with_cell do %>
          <div class="font-medium text-slate-800">
            <%= invite.email %>
          </div>
        <% end %>
        <% row.with_cell do %>
          -
        <% end %>
        <% row.with_cell do %>
          <%= invite.role.titleize %>
        <% end %>
        <% row.with_cell do %>
          -
        <% end %>
        <% row.with_cell do %>
          -
        <% end %>
        <% row.with_cell do %>
          <%= invite.sender&.email || "–" %>
        <% end %>
        <% row.with_cell(wrap: true) do %>
          <div class="flex gap-x-2 justify-end">
            <%= render ButtonComponent.new(
              scheme: :danger,
              type: :button,
              size: :xxs,
              options: accounts_organization_invitation_path(current_organization, invite),
              html_options: { method: :delete, data: { turbo_method: :delete, turbo_confirm: "Are you sure you want to cancel the invitation for #{invite.email}?" } }) do |b|
              b.with_icon("trash.svg")
            end %>
          </div>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% end %>
