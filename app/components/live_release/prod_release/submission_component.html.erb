<% content_for :error_resource do %>
  <%= render ErrorComponent.new(submission) %>
<% end %>

<div class="flex flex-col item-gap-default">
  <% if cascading_rollout_actionable? %>
    <%= render AlertComponent.new(kind: :announcement,
                                  type: :announce,
                                  title: "There's a pending rollout to complete",
                                  full_screen: false) do %>

      <div class="flex flex-col gap-2 mt-1 text-sm">
        <p>
          Since cascading rollouts are enabled, you must fully release the previous rollout from
          <span class="font-semibold tracking-wide">release <%= previously_completed_release.release_version %></span>
          to 100% before
          starting the current one.
        </p>

        <div class="flex flex-row items-end gap-2">
          <%= render ButtonComponent.new(
            label: "Fully release previous rollout",
            scheme: :default,
            options: fully_release_previous_rollout_store_submission_path(id),
            size: :xxs,
            html_options: html_opts(:patch, "Are you sure you want to fully rollout #{previously_completed_release.release_version}?")
          ) %>

          <%= render ButtonComponent.new(label: "Go to previous rollout â†—",
                                         scheme: :link,
                                         type: :link_external,
                                         options: previously_completed_release_link,
                                         html_options: { class: "text-sm" },
                                         authz: false,
                                         size: :none,
                                         arrow: :none) %>
        </div>
      </div>
    <% end %>
  <% end %>

  <% if release_platform_run.metadata_editable? %>
    <div>
      <%= render AlertComponent.new(type: :info, title: "You can edit the release notes until you prepare for review. Once prepared, you won't be able to change the release notes.", full_screen: false) %>
    </div>
  <% end %>

  <%= render partial: "shared/play_store_review_rejected", locals: { show: show_blocked_message?,
                                                                     build: current_build,
                                                                     actionable: false } %>

  <% if @new_submission_prompt %>
    <%= render AlertComponent.new(kind: :announcement, type: :announce, title: "New RC Build is available") do |ann| %>
      <% modal = ann.with_announcement_modal(title: "Available builds", subtitle: "Choose a build to send for submission to the store") %>
      <% modal.with_button(label: "Start a new submission", scheme: :default, type: :action, size: :xxs) %>
      <% modal.with_body do %>
        <% render FormComponent.new(model: [release, release_platform_run, release_platform_run.production_releases.new],
                                    scope: :production_release,
                                    url: run_production_path(release_platform_run),
                                    free_form: true) do |form| %>
          <%= form.F.labeled_select :build_id, "Select a build", build_opts %>
          <% form.with_action do %>
            <%= form.F.authz_submit "Create submission", "mail.svg" %>
          <% end %>
        <% end %>
      <% end %>

      <div class="flex flex-col gap-2">
        <%= render LiveRelease::BuildComponent.new(
          newer_builds.first,
          show_metadata: false,
          show_compact_metadata: true,
          show_ci: false,
          show_activity: false,
          show_commit: false) %>

        <span class="text-sm">
          You can start a fresh submission from the newly prepared release candidate.
        </span>
      </div>
    <% end %>
  <% end %>

  <% if @cancel_prompt %>
    <%= render AlertComponent.new(
      type: :info,
      title: "A new build #{newer_builds.first.display_name} is available. Cancel submission and change the build.",
      full_screen: false,
      dismissible: true) %>
  <% end %>

  <% if @change_build_prompt %>
    <%= render AlertComponent.new(
      type: :info,
      title: "A new build #{newer_builds.first.display_name} is available. Change build to update the submission.",
      full_screen: false,
      dismissible: true) %>
  <% end %>

  <% if @blocked_notice %>
    <%= render AlertComponent.new(kind: :banner,
                                  type: :notice,
                                  title: "Release to production is blocked",
                                  full_screen: false,
                                  info: blocked_release_info[:info]) do %>
      <%= blocked_release_info[:message] %>
    <% end %>
  <% end %>

  <%= render CardComponent.new(title: @title, size: :full, separator: false, border_style:) do |card| %>
    <% card.with_action do %>
      <% if changeable? %>
        <%= render ModalComponent.new(
          title: "Available builds",
          subtitle: "Choose a build to send for submission to the store") do |modal| %>

          <% button = modal.with_button(label: "Change build", scheme: :light, type: :action, size: :xxs) %>
          <% button.with_icon("pencil.svg") %>
          <% modal.with_body do %>
            <%= render FormComponent.new(model: [release, release_platform_run, submission],
                                         scope: :store_submission,
                                         url: store_submission_path(id),
                                         free_form: true) do |form| %>
              <%= form.F.labeled_select :build_id, "Select a build", build_opts(default: current_build) %>

              <% form.with_action do %>
                <%= form.F.authz_submit "Change", "mail.svg" %>
              <% end %>
            <% end %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>

    <%# card.with_action do %>
    <%#= mock_actions %>
    <%# end %>

    <% card.with_action do %>
      <% if action.present? %>
        <%= render ButtonComponent.new(**action) { |b| b.with_icon("clipboard_list.svg") } %>
      <% end %>
    <% end %>

    <% card.with_action do %>
      <% if submission.retryable? %>
        <%= render ButtonComponent.new(label: "Retry sending to #{submission.provider.display}",
                                       auto_label_case: false,
                                       scheme: :default,
                                       type: :button,
                                       options: retry_store_submission_path(submission),
                                       html_options: html_opts(:patch, "Are you sure you want to retry the submission to #{submission.display}?"),
                                       size: :xxs) do |b| %>
          <% b.with_icon(submission_logo_bw, size: :md) %>
        <% end %>
      <% end %>
      <% if submission.reviewable? %>
        <%= render ModalComponent.new(
          title: "Submission Preview",
          subtitle: "Review all the details before submitting for review",
          dismissable: false, size: :xxl) do |modal| %>

          <% modal.with_button(label: "Preview & submit for review", scheme: :default, type: :action, size: :xxs) %>
          <% modal.with_body do %>
            <div class="flex flex-col gap-6">
              <%= render LiveRelease::PreviewSubmissionComponent.new(submission) %>
              <%= render ButtonComponent.new(scheme: :default,
                                             type: :button,
                                             label: "Submit for review",
                                             options: submit_for_review_store_submission_path(id),
                                             html_options: { method: :patch, data: { turbo_method: :patch } }) %>
            </div>
          <% end %>
        <% end %>
      <% end %>
    <% end %>

    <div class="flex flex-col item-gap-default text-secondary text-xs">
      <%= render LiveRelease::BuildComponent.new(current_build,
                                                 show_metadata: false,
                                                 show_ci: false,
                                                 show_activity: false,
                                                 show_commit: false,
                                                 show_compact_metadata: true) %>

      <div class="flex flex-row gap-2 items-center">
        <%= render IconComponent.new(store_icon, size: :xl) %>
        <%= render BadgeComponent.new(**status) %>
      </div>

      <% if submission.failed? && submission.last_failed_event.present? %>
        <%= render AlertComponent.new(type: :error, title: raw(submission.last_failed_event.message), full_screen: false) %>
      <% end %>

      <%= render LiveRelease::BuildComponent.new(current_build,
                                                 show_number: false,
                                                 show_metadata: true,
                                                 show_ci: false,
                                                 show_activity: false,
                                                 show_commit: true) %>

      <%= render partial: "shared/play_store_review_rejected", locals: { show: submission.failed_with_action_required?,
                                                                         build: current_build,
                                                                         actionable: true,
                                                                         channel_name: submission.submission_channel.name } %>

      <%= render SectionComponent.new(style: :titled, title: "External info", size: :micro) do %>
        <div class="flex">
          <%= render HorizontalDataSetComponent.new do |component| %>
            <% component.with_data_set(title: "Status").with_content(store_status) %>
            <% component.with_data_set(title: "Dashboard") do %>
              <% if external_link.present? %>
                <%= render ButtonComponent.new(scheme: :naked_icon,
                                               type: :link_external,
                                               options: external_link,
                                               html_options: { class: "text-xs" },
                                               authz: false,
                                               size: :none) do |b| %>
                  <% b.with_icon("external_link.svg", size: :md) %>
                <% end %>
              <% else %>
                <%= NOT_AVAILABLE %>
              <% end %>
            <% end %>
          <% end %>
        </div>
      <% end %>
    </div>
  <% end %>
</div>
